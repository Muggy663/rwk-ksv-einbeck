rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // === HELPER FUNCTIONS (Neue 3-Ebenen-Architektur) ===
    
    // 👑 Globale Rollen
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.email == 'admin@rwk-einbeck.de';
    }
    
    function isSystemAdmin() {
      return isAuthenticated() && getUserRole() == 'system_admin';
    }
    
    function isDataManager() {
      return isAuthenticated() && getUserRole() == 'data_manager';
    }

    // 🎯 KV-Rollen (Neue Struktur)
    function isKvWettkampfleiter(kvId) {
      return isAuthenticated() && getUserKvRole(kvId) == 'kv_wettkampfleiter';
    }
    
    function isKvKmOrga(kvId) {
      return isAuthenticated() && getUserKvRole(kvId) == 'kv_km_orga';
    }
    
    function isKvPressewart(kvId) {
      return isAuthenticated() && getUserKvRole(kvId) == 'kv_pressewart';
    }
    
    function isKvKampfrichter(kvId) {
      return isAuthenticated() && getUserKvRole(kvId) == 'kv_kampfrichter';
    }

    // 🏢 Vereins-Rollen (Neue granulare Struktur)
    function isVereinsrolle(clubId, role) {
      let permissions = getUserPermissions();
      return isAuthenticated() && 
             permissions != null && 
             permissions.clubRoles != null &&
             permissions.clubRoles[clubId] == role;
    }

    function isSportleiter(clubId) { 
      return isVereinsrolle(clubId, 'sportleiter'); 
    }
    
    function isKassenwart(clubId) { 
      return isVereinsrolle(clubId, 'kassenwart'); 
    }
    
    function isSchriftfuehrer(clubId) { 
      return isVereinsrolle(clubId, 'schriftfuehrer'); 
    }
    
    function isVorstand(clubId) { 
      return isVereinsrolle(clubId, 'vorstand'); 
    }
    
    function isJugendwart(clubId) { 
      return isVereinsrolle(clubId, 'jugendwart'); 
    }
    
    function isDamenwart(clubId) { 
      return isVereinsrolle(clubId, 'damenwart'); 
    }
    
    function isZeugwart(clubId) { 
      return isVereinsrolle(clubId, 'zeugwart'); 
    }
    
    function isPressewart(clubId) { 
      return isVereinsrolle(clubId, 'pressewart'); 
    }

    // 🔧 Basis-Funktionen
    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserPermissions() {
      return get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data;
    }

    function getUserRole() {
      let permissions = getUserPermissions();
      return permissions != null && permissions.platformRole != null ? permissions.platformRole : 
             (permissions != null ? permissions.role : null); // Fallback für Migration
    }

    function getUserKvRole(kvId) {
      let permissions = getUserPermissions();
      return permissions.kvRoles != null ? permissions.kvRoles[kvId] : null;
    }

    function hasClubAccess(clubId) {
      return isSuperAdmin() || 
             isVorstand(clubId) || 
             isSportleiter(clubId) || 
             isKassenwart(clubId) || 
             isSchriftfuehrer(clubId) ||
             isJugendwart(clubId) ||
             isDamenwart(clubId) ||
             isZeugwart(clubId) ||
             isPressewart(clubId);
    }

    // Legacy-Funktionen (für Übergangszeit)
    function isVereinsvertreter() {
      return isAuthenticated() && getUserRole() == 'vereinsvertreter';
    }
    
    function isVereinsvorstand() {
      return isAuthenticated() && getUserRole() == 'vereinsvorstand';
    }

    function getUserClubId(uid) {
      return get(/databases/$(database)/documents/user_permissions/$(uid)).data.clubId;
    }

    function isValidRingCount(rings) {
      return rings is number && rings >= 0 && rings <= 600;
    }

    // === ÖFFENTLICHE BEREICHE (Tabellen bleiben öffentlich) ===
    
    match /seasons/{season} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /clubs/{club} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /rwk_leagues/{league} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /shooters/{shooter} {
      allow read: if true;
      allow create: if isSuperAdmin() || isAuthenticated(); // Neue Schützen anlegen
      allow update: if isSuperAdmin() || 
                    isVereinsvertreter() || // Legacy
                    isVereinsvorstand() || // Legacy
                    isAuthenticated(); // Für Team-Zuordnungen
      allow delete: if isSuperAdmin();
    }

    match /newsItems/{news} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /rwk_news/{news} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // === RWK-SYSTEM (Hybrid-Sicherheit) ===
    
    match /rwk_teams/{team} {
      allow read: if true; // Öffentlich für Tabellen
      allow write: if isSuperAdmin() || 
                   isVereinsvertreter() || // Legacy - MUSS funktionieren
                   isVereinsvorstand() || // Legacy - MUSS funktionieren
                   isAuthenticated(); // TEMPORÄR für alle anderen
    }

    match /rwk_scores/{score} {
      allow read: if true;
      allow create: if isAuthenticated() && 
                    isValidRingCount(request.resource.data.totalRinge) &&
                    request.resource.data.durchgang is number &&
                    request.resource.data.durchgang >= 1 &&
                    request.resource.data.durchgang <= 5;
      allow update: if isSuperAdmin();
      allow delete: if isSuperAdmin() || 
                    isVereinsvertreter() || // Legacy
                    (resource.data.clubId != null && hasClubAccess(resource.data.clubId));
    }

    match /rwk_team_shooters/{assignment} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isSuperAdmin() || 
                    isVereinsvertreter() || // Legacy
                    isVereinsvorstand() || // Legacy
                    isAuthenticated(); // TEMPORÄR für Team-Operationen
      allow delete: if isSuperAdmin() || 
                    isVereinsvertreter() || // Legacy
                    isVereinsvorstand() || // Legacy
                    isAuthenticated(); // TEMPORÄR für Team-Operationen
    }

    match /rwk_shooter_team_assignments/{assignment} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isSuperAdmin() || 
                    isVereinsvertreter() || // Legacy
                    isVereinsvorstand() || // Legacy
                    isAuthenticated(); // TEMPORÄR für Team-Operationen
      allow delete: if isSuperAdmin() || 
                    isVereinsvertreter() || // Legacy
                    isVereinsvorstand() || // Legacy
                    isAuthenticated(); // TEMPORÄR für Team-Operationen
    }

    // === KM-SYSTEM (Granulare Kontrolle) ===
    
    match /km_meldungen/{meldung} {
      allow read: if true;
      allow write: if isSuperAdmin() || 
                   isVereinsvertreter() || // Legacy
                   isVereinsvorstand() || // Legacy
                   (resource.data.clubId != null && (
                     isSportleiter(resource.data.clubId) ||
                     isVorstand(resource.data.clubId)
                   ));
    }

    match /km_startlisten/{startliste} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_ergebnisse/{ergebnis} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_wettkampfklassen/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_disziplinen/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_mannschaften/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_startlisten_configs/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_vm_ergebnisse/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_user_permissions/{userId} {
      allow read: if isSuperAdmin() || (isAuthenticated() && request.auth.uid == userId);
      allow write: if isSuperAdmin();
    }

    match /meyton_klassen/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /system_config/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /km_jahre/{document=**} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Alle KM-Meldungen Collections (Regex-Pattern)
    match /{collection}/{document=**} {
      allow read: if true && collection.matches('km_meldungen_.*');
      allow write: if (isSuperAdmin() || 
                      isVereinsvertreter() || // Legacy
                      isVereinsvorstand() || // Legacy
                      isAuthenticated()) && collection.matches('km_meldungen_.*'); // TEMPORÄR für API-Zugriff
    }

    // === VEREINSSOFTWARE (Multi-Tenant + Granular) ===
    
    // Mitglieder - Erweiterte Lesezugriffe für verschiedene Rollen
    match /clubs/{clubId}/mitglieder/{member} {
      allow read: if isSuperAdmin() || 
                  isVereinsvertreter() || // Legacy - TEMPORÄR
                  isVereinsvorstand() || // Legacy - TEMPORÄR
                  isVorstand(clubId) || 
                  isKassenwart(clubId) || 
                  isSchriftfuehrer(clubId) ||
                  isSportleiter(clubId) || // Für Mannschaftsplanung
                  isJugendwart(clubId) ||
                  isDamenwart(clubId);
      allow write: if isSuperAdmin() || 
                   isVereinsvertreter() || // Legacy - TEMPORÄR
                   isVereinsvorstand() || // Legacy - TEMPORÄR
                   isVorstand(clubId) || 
                   isKassenwart(clubId);
    }

    // Finanzen & Beiträge - Nur Kassenwart + Vorstand
    match /clubs/{clubId}/finanzen/{finance} {
      allow read, write: if isSuperAdmin() || 
                         isVereinsvertreter() || // Legacy - TEMPORÄR
                         isVereinsvorstand() || // Legacy - TEMPORÄR
                         isVorstand(clubId) || 
                         isKassenwart(clubId);
    }

    match /clubs/{clubId}/beitraege/{beitrag} {
      allow read, write: if isSuperAdmin() || 
                         isVereinsvertreter() || // Legacy - TEMPORÄR
                         isVereinsvorstand() || // Legacy - TEMPORÄR
                         isVorstand(clubId) || 
                         isKassenwart(clubId);
    }

    // Protokolle - Schriftführer + Vorstand (Kassenwart kann lesen)
    match /clubs/{clubId}/protokolle/{protokoll} {
      allow read: if isSuperAdmin() || 
                  isVereinsvertreter() || // Legacy - TEMPORÄR
                  isVereinsvorstand() || // Legacy - TEMPORÄR
                  isVorstand(clubId) || 
                  isSchriftfuehrer(clubId) ||
                  isKassenwart(clubId); // Kann Protokolle lesen
      allow write: if isSuperAdmin() || 
                   isVereinsvertreter() || // Legacy - TEMPORÄR
                   isVereinsvorstand() || // Legacy - TEMPORÄR
                   isVorstand(clubId) || 
                   isSchriftfuehrer(clubId);
    }

    match /clubs/{clubId}/vereinsrecht_protokolle/{protokoll} {
      allow read: if isSuperAdmin() || 
                  isVereinsvertreter() || // Legacy - TEMPORÄR
                  isVereinsvorstand() || // Legacy - TEMPORÄR
                  isVorstand(clubId) || 
                  isSchriftfuehrer(clubId) ||
                  isKassenwart(clubId);
      allow write: if isSuperAdmin() || 
                   isVereinsvertreter() || // Legacy - TEMPORÄR
                   isVereinsvorstand() || // Legacy - TEMPORÄR
                   isVorstand(clubId) || 
                   isSchriftfuehrer(clubId);
    }

    // Aufgaben - Nur Vorstand
    match /clubs/{clubId}/aufgaben/{task} {
      allow read, write: if isSuperAdmin() || 
                         isVereinsvertreter() || // Legacy - TEMPORÄR
                         isVereinsvorstand() || // Legacy - TEMPORÄR
                         isVorstand(clubId);
    }

    // Lizenzen & Jubiläen - Vorstand + spezielle Rollen
    match /clubs/{clubId}/lizenzen/{lizenz} {
      allow read, write: if isSuperAdmin() || 
                         isVereinsvertreter() || // Legacy - TEMPORÄR
                         isVereinsvorstand() || // Legacy - TEMPORÄR
                         isVorstand(clubId);
    }

    match /clubs/{clubId}/jubilaeen/{jubilaeum} {
      allow read, write: if isSuperAdmin() || 
                         isVereinsvertreter() || // Legacy - TEMPORÄR
                         isVereinsvorstand() || // Legacy - TEMPORÄR
                         isVorstand(clubId);
    }

    // Catch-all für alle anderen Club-Collections
    match /clubs/{clubId}/{document=**} {
      allow read: if isSuperAdmin() || 
                  isVereinsvertreter() || // Legacy - TEMPORÄR
                  isVereinsvorstand() || // Legacy - TEMPORÄR
                  hasClubAccess(clubId);
      allow write: if isSuperAdmin() || 
                   isVereinsvertreter() || // Legacy - TEMPORÄR
                   isVereinsvorstand() || // Legacy - TEMPORÄR
                   isVorstand(clubId);
    }

    // === LEGACY COLLECTIONS (Vereinsrecht ohne Multi-Tenant) ===
    
    match /vereinsrecht_protokolle/{document} {
      allow read, write: if isSuperAdmin() || isVereinsvertreter() || isVereinsvorstand();
    }

    match /vereinsrecht_wahlen/{document} {
      allow read, write: if isSuperAdmin() || isVereinsvertreter() || isVereinsvorstand();
    }

    match /vereinsrecht_satzung/{document} {
      allow read, write: if isSuperAdmin() || isVereinsvertreter() || isVereinsvorstand();
    }

    match /vereinsrecht_compliance/{document} {
      allow read, write: if isSuperAdmin() || isVereinsvertreter() || isVereinsvorstand();
    }

    match /vereinsrecht_spenden/{document} {
      allow read, write: if isSuperAdmin() || isVereinsvertreter() || isVereinsvorstand();
    }

    // === SYSTEM & ADMIN ===
    
    match /user_permissions/{userId} {
      allow read: if isSuperAdmin() || 
                  (isAuthenticated() && request.auth.uid == userId) ||
                  isAuthenticated(); // TEMPORÄR für Regelauswertung
      allow write: if isSuperAdmin();
    }

    match /users/{userId} {
      allow read: if isSuperAdmin() || 
                  (isAuthenticated() && request.auth.uid == userId);
      allow write: if isSuperAdmin();
    }

    // === EVENTS & LEGACY ===
    
    match /events/{event} {
      allow read: if true;
      allow create, update: if isAuthenticated() && 
        (isSuperAdmin() ||
         getUserRole() == "mannschaftsfuehrer" || 
         getUserRole() == "vereinsvertreter" ||
         getUserRole() == "vereinsvorstand");
      allow delete: if isSuperAdmin() || 
                    (isAuthenticated() && resource.data.createdBy == request.auth.uid);
    }

    match /league_updates/{update} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isSuperAdmin();
    }

    match /team_substitutions/{substitution} {
      allow read: if true;
      allow create: if isSuperAdmin() ||
                      (isVereinsvertreter() && 
                       getUserClubId(request.auth.uid) == request.resource.data.clubId);
      allow update: if isSuperAdmin() ||
                      (isVereinsvertreter() && 
                       getUserClubId(request.auth.uid) == resource.data.clubId);
      allow delete: if isSuperAdmin() ||
                      (isVereinsvertreter() && 
                       getUserClubId(request.auth.uid) == resource.data.clubId);
    }

    // === SUPPORT & MISC ===
    
    match /support_tickets/{ticket} {
      allow create: if true && 
                    request.resource.data.email is string &&
                    request.resource.data.name is string &&
                    request.resource.data.subject is string &&
                    request.resource.data.message is string;
      allow read, update, delete: if isSuperAdmin();
    }

    match /audit_logs/{log} {
      allow read: if isSuperAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }

    match /documents/{doc} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /protests/{protest} {
      allow read: if isSuperAdmin() || 
                  (isAuthenticated() && resource.data.submittedBy == request.auth.token.email);
      allow create: if isAuthenticated();
      allow update: if isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    match /notification_subscriptions/{subscription} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                    (resource.data.userEmail == request.auth.token.email || isSuperAdmin());
      allow delete: if isAuthenticated() && 
                    (resource.data.userEmail == request.auth.token.email || isSuperAdmin());
    }

    match /notifications/{notification} {
      allow read: if isSuperAdmin();
      allow create: if isAuthenticated();
    }

    match /email_contacts/{contact} {
      allow read, write: if isSuperAdmin();
    }

    match /admin_settings/{setting} {
      allow read, write: if isSuperAdmin();
    }

    match /app_stats/{stat} {
      allow read: if true;
      allow write: if true;
    }

    match /download_stats/{stat} {
      allow read, write: if true;
    }

    // === FALLBACK ===
    
    // Alles andere verbieten
    match /{document=**} {
      allow read, write: if false;
    }
  }
}