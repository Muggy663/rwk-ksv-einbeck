rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
// Users Collection - Admin kann Login-Daten lesen
match /users/{userId} {
  allow read: if request.auth != null && (
    request.auth.uid == userId || 
    (exists(/databases/$(database)/documents/user_permissions/$(request.auth.uid)) &&
     get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.role == 'superadmin')
  );
}

    // === Globale Hilfsfunktionen ===
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.email == 'admin@rwk-einbeck.de';
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function isVereinsvertreter() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.role == 'vereinsvertreter';
    }
    
    function isVereinsvorstand() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.role == 'vereinsvorstand';
    }

    function hasClubAccess(clubId) {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.clubId == clubId;
    }

    // Admin-Berechtigung für Datenbereinigung
    function hasAdminCleanupAccess() {
      return isSuperAdmin();
    }

    // Validierung für Ringzahlen basierend auf Liga-Einstellungen
    function isValidRingCount(rings) {
      return rings is number && rings >= 0 && rings <= 600; // Max 600 für alle Disziplinen
    }

    // Hilfsfunktion für Club-ID aus User-Permissions (Multi-Tenant)
    function getUserClubId(uid) {
      return get(/databases/$(database)/documents/user_permissions/$(uid)).data.clubId;
    }

    // === Regeln für Collections ===

    // Öffentlich lesbare, nur von Admin schreibbare Collections
    match /seasons/{season} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /clubs/{club} {
      allow read: if true;
      allow write: if true; // TEMPORÄR FÜR KM-IMPORT
    }

    match /rwk_leagues/{league} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /newsItems/{newsItem} { 
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Regeln für events-Sammlung
    match /events/{eventId} {
      allow read: if true;
      allow create, update: if request.auth != null && 
        (isSuperAdmin() ||
         get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.role == "mannschaftsfuehrer" || 
         get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.role == "vereinsvertreter" ||
         get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.role == "vereinsvorstand");
      allow delete: if request.auth != null && 
        (isSuperAdmin() || 
         resource.data.createdBy == request.auth.uid);
    }

    // Teams - Verwaltung durch Admin und Vereinsvertreter
    // Teams - TEMPORÄR OFFEN FÜR MIGRATION
    match /rwk_teams/{teamId} {
      allow read, write: if true; // TEMPORÄR: Vollzugriff für Migration
    }

    // Team-Schützen-Zuordnungen - Erweiterte Berechtigung für Bereinigung
    match /rwk_team_shooters/{assignmentId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isSuperAdmin() || 
                    (isVereinsvertreter() && 
                     hasClubAccess(resource.data.clubId));
      allow delete: if hasAdminCleanupAccess() || 
                    (isVereinsvertreter() && 
                     hasClubAccess(resource.data.clubId));
    }

    // Regeln für rwk_shooter_team_assignments
    match /rwk_shooter_team_assignments/{assignmentId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isSuperAdmin() || 
                    (isVereinsvertreter() && 
                     hasClubAccess(resource.data.clubId));
      allow delete: if hasAdminCleanupAccess() || 
                    (isVereinsvertreter() && 
                     hasClubAccess(resource.data.clubId));
    }

   // Zentrale Schützen-Collection - TEMPORÄR OFFEN FÜR MIGRATION
    match /shooters/{shooterId} {
      allow read: if true; // Öffentlich lesbar für Tabellen
      allow write: if true; // TEMPORÄR: Vollzugriff für Migration und Team-Operationen
    }

    // Ergebnisse - VERBESSERT: Validierung der Ringzahlen
    match /rwk_scores/{scoreId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
                    isValidRingCount(request.resource.data.totalRinge) &&
                    request.resource.data.durchgang is number &&
                    request.resource.data.durchgang >= 1 &&
                    request.resource.data.durchgang <= 5;
      allow update: if isSuperAdmin();
      allow delete: if hasAdminCleanupAccess() || 
                    (isVereinsvertreter() && 
                     hasClubAccess(resource.data.clubId));
    }

    // Liga-Updates - Lesbar für alle, schreibbar und aktualisierbar für authentifizierte Benutzer
    match /league_updates/{updateId} { 
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isSuperAdmin();
    }

    // Support-Tickets - VERBESSERT: Rate Limiting
    match /support_tickets/{ticketId} {
      allow create: if true && 
                    request.resource.data.email is string &&
                    request.resource.data.name is string &&
                    request.resource.data.subject is string &&
                    request.resource.data.message is string;
      allow read, update, delete: if isSuperAdmin();
    }

    // Benutzerberechtigungen - Lesbar für Admin und eigenen Benutzer, schreibbar nur für Admin
    match /user_permissions/{userId} {
      allow read: if isSuperAdmin() || (isAuthenticated() && request.auth.uid == userId) || isAuthenticated(); // TEMPORÄR: Alle authentifizierten Benutzer können lesen für Regelauswertung
      allow write: if isSuperAdmin();
    }

    // Audit-Logs - Lesbar für Admin, schreibbar für authentifizierte Benutzer
    match /audit_logs/{logId} {
      allow read: if isSuperAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false; // Audit-Logs sollten nie geändert oder gelöscht werden
    }

    // Dokumente - Lesbar für alle, schreibbar nur für Admin
    match /documents/{documentId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // RWK-News - Lesbar für alle, schreibbar nur für Admin
    match /rwk_news/{newsId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Proteste - Lesbar für Admin und Ersteller, schreibbar für authentifizierte Benutzer
    match /protests/{protestId} {
      allow read: if isSuperAdmin() || 
                    (isAuthenticated() && resource.data.submittedBy == request.auth.token.email);
      allow create: if isAuthenticated();
      allow update: if isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Push-Notification Subscriptions
    match /notification_subscriptions/{subscriptionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                    (resource.data.userEmail == request.auth.token.email || isSuperAdmin());
      allow delete: if isAuthenticated() && 
                    (resource.data.userEmail == request.auth.token.email || isSuperAdmin());
    }
    
    // Notifications History
    match /notifications/{notificationId} {
      allow read: if isSuperAdmin();
      allow create: if isAuthenticated();
    }
    
    // E-Mail Kontakte
    match /email_contacts/{contactId} {
      allow read, write: if isSuperAdmin();
    }
    
    // Admin-Einstellungen
    match /admin_settings/{settingId} {
      allow read, write: if isSuperAdmin();
    }
    
    // Team-Substitutions - Verwaltung durch Admin und Vereinsvertreter
    match /team_substitutions/{substitutionId} {
      allow read: if true;
      allow create: if isSuperAdmin() ||
                      (isVereinsvertreter() && 
                       hasClubAccess(request.resource.data.clubId));
      allow update: if isSuperAdmin() ||
                      (isVereinsvertreter() && 
                       hasClubAccess(resource.data.clubId));
      allow delete: if isSuperAdmin() ||
                      (isVereinsvertreter() && 
                       hasClubAccess(resource.data.clubId));
    }

    // App-Statistiken - Lesbar für alle, schreibbar auch ohne Auth für Download-Zähler
    match /app_stats/{statId} {
      allow read: if true;
      allow write: if true; // Erlaubt Download-Zähler ohne Auth
    }
    
    // Download-Zähler - Komplett offen für API-Operationen
    match /download_stats/{document} {
      allow read, write: if true;
    }
    
    // === KM-SYSTEM REGELN ===
    
    // KM-Benutzerberechtigungen - Nur SuperAdmin kann verwalten
    match /km_user_permissions/{userId} {
      allow read: if isSuperAdmin() || (isAuthenticated() && request.auth.uid == userId);
      allow write: if isSuperAdmin();
    }
    
    // KM-Wettkampfklassen - Temporär komplett offen
    match /km_wettkampfklassen/{document} {
      allow read, write: if true;
    }
    
    // KM-Disziplinen - Temporär komplett offen
    match /km_disziplinen/{document} {
      allow read, write: if true;
    }
    
    // KM-Meldungen - Temporär offen
    match /km_meldungen/{document} {
      allow read, write: if true;
    }
    
    // KM-Mannschaften - Temporär offen
    match /km_mannschaften/{document} {
      allow read: if true; // Explizit für API-Operationen
      allow write: if true;
      allow create: if true;
    }
    
    match /km_startlisten_configs/{document} {
      allow read, write: if true;
    }
    
    match /km_startlisten/{document} {
      allow read, write: if true;
    }
    
    match /km_vm_ergebnisse/{document} {
      allow read, write: if true;
    }

    // KM-Ergebnisse - Temporär offen
    match /km_ergebnisse/{document} {
      allow read, write: if true;
    }

    // Meyton-Klassen für Export
    match /meyton_klassen/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // System-Konfiguration (Mannschaftsregeln etc.) - TEMPORÄR OFFEN
    match /system_config/{document} {
      allow read, write: if true;
    }

    // Alle KM-Meldungen Collections (Regex-Pattern)
    match /{collection}/{document=**} {
      allow read, write: if true && collection.matches('km_meldungen_.*');
    }

    match /km_jahre/{document=**} {
      allow read, write: if true;
    }

    // === MULTI-TENANT CLUB-STRUKTUR (NEU) ===
    
    // Multi-Tenant Club-Struktur - Nur eigene Vereinsdaten sichtbar
    match /clubs/{clubId}/{document=**} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    // Spezifische Regeln für verschiedene Club-Collections
    match /clubs/{clubId}/mitglieder/{memberId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    match /clubs/{clubId}/vereinsrecht_protokolle/{protocolId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    match /clubs/{clubId}/vereinsrecht_wahlen/{electionId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    match /clubs/{clubId}/vereinsrecht_satzung/{documentId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    match /clubs/{clubId}/vereinsrecht_compliance/{complianceId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    match /clubs/{clubId}/vereinsrecht_spenden/{donationId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    match /clubs/{clubId}/finanzen/{financeId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    match /clubs/{clubId}/aufgaben/{taskId} {
      allow read, write: if request.auth != null && 
        getUserClubId(request.auth.uid) == clubId;
    }

    // VEREINSRECHT - TEMPORÄRE ENTWICKLUNGS-REGELN (OFFEN) - LEGACY
    match /vereinsrecht_protokolle/{document} {
      allow read, write: if true;
    }

    match /vereinsrecht_wahlen/{document} {
      allow read, write: if true;
    }

    match /vereinsrecht_satzung/{document} {
      allow read, write: if true;
    }

    match /vereinsrecht_compliance/{document} {
      allow read, write: if true;
    }

    match /vereinsrecht_spenden/{document} {
      allow read, write: if true;
    }

   // Fallback-Regel: Alles andere verbieten
    match /{document=**} {
      allow read, write: if false;
    }
  
  // TEMPORÄRE REGEL FÜR ENTWICKLUNG - FÜGE DAS ZU DEN BESTEHENDEN REGELN HINZU:

// Multi-Tenant Club-Struktur - TEMPORÄR OFFEN FÜR ENTWICKLUNG
match /clubs/{clubId}/{document=**} {
  allow read, write: if true;
}

// TEMPORÄR - ganz oben in die Rules
match /clubs/{clubId}/{document=**} {
  allow read, write: if true;
}


  }
}